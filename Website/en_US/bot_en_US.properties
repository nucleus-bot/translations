#
# Website references to the bot
#

# Ranks
bot.rank_admin = Admin
bot.rank_admin_desc[] = Provides all permission for the channel.;\
  May only be requested by Staff
bot.rank_owner = Owner
bot.rank_owner_desc[] = Provides all permissions for the channel.;\
  Automatically given to the channel owner
bot.rank_editor = Editor
bot.rank_editor_desc[] = Provides all permissions for the channel, except the ability to grant or revoke Editor permissions.
bot.rank_supermod = SuperMod
bot.rank_supermod_desc[] = Grants permission to operate stream minigames. Such as creating and ending auctions, bets, and raffles. Cannot create, edit, or modify commands, currently played game, or title.
bot.rank_moderator = Moderator
bot.rank_moderator_desc[] = Can be used to grant access to custom commands.;\
  Does not grant access to any built-in commands.
bot.rank_regular = Regular
bot.rank_regular_desc[] = Can be used to grant access to custom commands.;\
  Does not grant access to any built-in commands.
bot.rank_subscriber = Subscriber
bot.rank_subscriber_desc[] = Can be used to grant access to custom commands.;\
  Does not grant access to any built-in commands.
bot.rank_staff = Staff
bot.rank_staff_desc[] = Does not grant any permissions, but is the only rank that allows the user to request access to permissions.;\
  This rank is automatically given to any NucleusBot staff.
bot.rank_public = Public
bot.rank_public_desc[] = Does not grant access to any built-in commands.;\
  The default rank for all viewers.
bot.rank_follower = Follower
bot.rank_follower_desc[] = Does not grant access to any built-in commands, but can be used to grant access to custom commands.

# Global command reference (These are what needs to be typed to run a command, IE "auction". Should be a singular word)
command.global_auction = Auction
command.global_bet = Bet
command.global_blacklist = Blacklist
command.global_clip = Clip
command.global_commands = Commands
command.global_costream = Costream
command.global_game = Game
command.global_giveaway = Giveaway
command.global_jukebox = Jukebox
command.global_multistream = Multistream
command.global_part = Part
command.global_permit = Permit
command.global_poll = Poll
command.global_queue = Queue
command.global_quotes = Quotes
command.global_raffle = Raffle
command.global_shoutout = Shoutout
command.global_title = Title
command.global_uptime = Uptime
command.global_version = Version

# Channel command types
command.type_alias = Alias
command.type_counter = Counter
command.type_hotkey = Hotkey
command.type_list = List
command.type_points = Points
command.type_sound = Sound
command.type_text = Text
command.type_whisper = Whisper

#
# Command / Variable Guide
#
variables.title = Variables
variables.name_title = Variable Name
variables.use_title = Simple Usage
variables.desc_title = Description

# Variables - General
variables.general_title = General
variables_name.bot = Bot
variables_desc.bot[] = Name of your bots chatter account (The account it responds from).
variables_name.channelid = Channel ID
variables_desc.channelid[] = ID of your channel.
variables_name.channelname = Channel name
variables_desc.channelname[] = Name of your channel.
variables_name.community = Community
variables_desc.community[] = Community of the channel.
variables_name.followers = Followers
variables_desc.followers[] = Channel follower count.
variables_name.game = Game
variables_desc.game[] = Current game being played.
variables_name.inputall = Input all
variables_desc.inputall[] = All arguments from the senders message (Entire user input).
variables_name.inputargument = Input argument
variables_desc.inputargument[] = %sth argument from the senders message
variables_name.integer = Integer
variables_desc.integer[] = Format the provided Integer by the thousandths to be more readable.
variables_name.json = JSON Parse
variables_desc.json[] = Get a value from provided JSON
variables_name.language = Language
variables_desc.language[] = The full name of the channels language.
variables_name.list = List
variables_desc.list[] = Format a List into a string separated by a value.
variables_name.loaded = Loaded
variables_desc.loaded[] = The currently loaded channel.
variables_name.nucleusid = Nucleus ID
variables_desc.nucleusid[] = Internal ID of your channel.
variables_name.pointname = Point name
variables_desc.pointname[] = The name of a loyalty point, by default the channels primary will be displayed
variables_name.points = Points
variables_desc.points[] = Amount of loyalty points the %s has.
variables_name.savestate = Save state
variables_desc.savestate[] = A custom saved variable that can be used to display temporary information, or information that changes frequently.
variables_name.sender = Sender
variables_desc.sender[] = The user that sent a command to trigger the current response.
variables_name.subscribers = Subscribers
variables_desc.subscribers[] = Channel subscriber count.
variables_name.time = Time
variables_desc.time[] = Converts provided seconds into elapsed time (# days, # hours, # minutes, # seconds).
variables_name.title = Title
variables_desc.title[] = Current title of the stream.
variables_name.uptime = Uptime
variables_desc.uptime[] = Stream uptime in seconds.
variables_name.url = URL Encode
variables_desc.url[] = Encodes the contained value with escaped characters to be contained in URLs.
variables_name.version = Version
variables_desc.version[] = Active version of NucleusBot.

# Variables - Errors
variables.errors_title = Errors
variables_name.error = Error
variables_desc.error[] = Clears the entire existing output and returns only the provided message.

# Variables - Conditionals
variables.conditionals_title = Conditionals
variables_name.empty = Empty
variables_desc.empty[] = Returns true if the variable has no parameters (%1$s), or false if it does (%2$s). Useful for checking user input {%3$s}.
variables_name.greaterthan = Greater Than
variables_desc.greaterthan[] = Checks if the first parameter is a larger number than the second parameter. Returns %s if either parameters are not numeric.
variables_name.lessthan = Less Than
variables_desc.lessthan[] = Check if the first parameter is a smaller number than the second parameter. Returns %s if either parameters are not numeric.
variables_name.isrank = Is
variables_desc.isrank[] = Check if the user running the command is the rank entered in the first parameter.
variables_name.operand = Operand
variables_desc.operand[] = A boolean conditional check.;\
  Should match the regex (%s).

# Variables - Math
variables.mathematics_title = Math
variables_name.absolutevalue = Absolute value
variables_desc.absolutevalue[] = Returns the absolute value of the given number.
variables_name.addition = Addition
variables_desc.addition[] = Adds all of the parameters within the variable, returns %s if any of the parameters are not numeric.
variables_name.division = Division
variables_desc.division[] = Divides all of the parameters within the variable, returns %s if any of the parameters are not numeric.
variables_name.maximum = Maximum
variables_desc.maximum[] = Returns the maximum 64-bit signed-integer (%s).
variables_name.minimum = Minimum
variables_desc.minimum[] = Returns the minimum 64-bit signed-integer (%s).
variables_name.multiplication = Multiplication
variables_desc.multiplication[] = Multiplies all of the parameters within the variable, returns %s if any of the parameters are not numeric.
variables_name.subtraction = Subtraction
variables_desc.subtraction[] = Subtracts all of the parameters within the variable, returns %s if any of the parameters are not numeric.

# Variables - Events
variables.events_title = Events
variables.events_warn = Only usable in events
variables_name.bits = Bits
variables_desc.bits[] = Amount of bits sent in Twitch chats.
variables_name.donator = Donator
variables_desc.donator[] = Username provided of the user donating.
variables_name.subscriber = Subscriber
variables_desc.subscriber[] = Username of the subscribed user.

#
# Templates and Other Examples for usage with the bot
#
loyalty_point_name.time_watched = Time Watched
loyalty_point_desc.time_watched = Total minutes a user has watched a stream
loyalty_point_cmd.time_watched = !time

loyalty_point_quant.short_years = Y
loyalty_point_quant.years = Years
loyalty_point_quant.short_days = D
loyalty_point_quant.days = Days
loyalty_point_quant.short_hours = H
loyalty_point_quant.hours = Hours
loyalty_point_quant.short_minutes = M
loyalty_point_quant.minutes = Minutes
loyalty_point_quant.short_seconds = S
loyalty_point_quant.seconds = Seconds
loyalty_point_quant.short_milliseconds = MS
loyalty_point_quant.milliseconds = Milliseconds
loyalty_point_quant.now = Just Now
